1) Poor General Health - 
2) Diabetes
3) No Fruits or Vegetables
4) High Blood Pressure
5) No Medical Care Due to Cost


Bronx County - 77 low-income and low-access tracts
Kings County (Brooklyn) - 73 low-income and low-access tracts
Queens County - 64 low-income and low-access tracts
New York County (Manhattan) - 30 low-income and low-access tracts
Erie County - 29 low-income and low-access tracts

Bronx
kings
Queens
New York
Erie

#Creating graph
plt.figure(figsize=(15,5))
plt.title("Geography Count for Diabetes", fontsize=15)
plt.bar(x = Diabetes ['Geography'].value_counts().index, height=Diabetes['Geography'].value_counts().values)
plt.show()

#Filter regions and county
Diabetes2 = Diabetes[Diabetes['Region/County'].isin(['Bronx','kings','Queens','New York','Erie'])]

#Creating bargraph
plt.figure(figsize=(15,5))
plt.title("Region/County Count for Diabetes", fontsize=15)
plt.bar(x = Diabetes2 ['Region/County'].value_counts().index, height= Diabetes2 ['Region/County'].value_counts().values)
plt.show()





# group countries by continents and apply sum() function 
RelevantHealthIndicator = RelevantHealthIndicator.groupby('Health Indicator Short Name', axis=0).sum()

# note: the output of the groupby method is a `groupby' object. 
# we can not use it further until we apply a function (eg .sum())
print(type(RelevantHealthIndicator.groupby('Health Indicator Short Name', axis=0)))

RelevantHealthIndicator.head()

# autopct create %, start angle represent starting point
RelevantHealthIndicator['Total'].plot(kind='pie',
                            figsize=(5, 6),
                            autopct='%1.1f%%', # add in percentages
                            startangle=90,     # start angle 90Â° (Africa)
                            shadow=True,       # add shadow      
                            )

plt.title('Immigration to Canada by Continent [1980 - 2013]')
plt.axis('equal') # Sets the pie chart to look like a circle.

plt.show()